== TOI7   Logic


TOI is a Utility to parse a line of data, say an accounting transaction
which is flexible to be human-friendly to type
but precise in deriving and standardizing fields such as dates.

It is intelligent in recognizing many formats for dates, using defaults,
and the order of fields are matched by data type-recognized-

Tables are used to identify values, say for /categories with synonyms
  and case-nostic/standardization
  
Prefix and Suffix and mid-fix punctuation identify functions/fields

Data words/fields are identified from the data lines as to type
    using pfx/sfx and format - dates and amounts, dollars
    and units
    
$ space requires kludge to join two words (space pieces) for one value.
;;de is multi-word memo, de, comment  follows ;;
Quotes embeds spaces, dbl sgl bktick as punct wrapping, special handling

Recognizing specific words, short-forms, abbreviations (sfx dot?)
    from tables which give the data type/field
    Eg AC2  B1  vs \B1  
    cat  vs /cat
    vendor target => /HH default, verizon -> cell, ...
    7554  tel sub-cat...
    eg. trans types:  {bp, bps, bpse, deb, xfer, ... }
    KAC  net trans type AE CE expenses from Asset B1, vs Liab CC VK1
      vs XC  pmt of CC  xfer A- to L+  
    =Running Bal (? end of date, seq within day ?)
    
Matching two dates in a line, in order of fields, tricky

Putting all unused data into one de field...

Assigning fields in order, after types separated out... Confusing

