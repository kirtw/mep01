ppPAR ;CKW/ESC i7feb24 umep./ rppar1/ ;2024-0208-01;mumps table parser
;
;
;  TKv(ti)  tokens @tokFL, 
;  GRc, GRk  Grammar  start top with Scom for now
;  PT(pi)  Parse table
;
;  Single stack - Push rule and ptr current next rule from list
; Pop when finish a rule
; Look at next token when terminal comes up in rule, ie ["."
;;tokFL:tkcod,tks,tkcs,tkce_TKv(tki)
top     KILL STK S STK=0
        S tki=1 D GFL^kfm(tokFL) ; tki : tkcod,tks, tkcs,tkce
        S TKc=tkcod
        S grabC="MCmds",RnC=1,grunC=1  ;Starting top rule 'mCmds', ptr RnC
        ;
T1      D GRU(grabC,grunC,RnC) ; : gran,grulst, toty, tok
          I tok="" D DLST G DUN:STK=1 D POP G T1 
        I toty="T",tok=TKc D TT1 G rulDUN:'RnC G T1
        I toty="R" S RnC=1,grabC=tok,grunC=$G(GRv(grabC,
rulDUN  ; log grab/gran  tkcs,tkce  tkis,tkie, rul-str'
        ; post-SR grab/gran
        D 
;* Found tkcod Bump Input, Bump RnC 
TT1   S grce=tkce
      ; push tkcs, tkce into PT(grab/gran)
      S tki=tki+1 I tki>TKv S TKc=""
      D GFL^kfm(tkFL) 
      S TKc=tkcod
      S RnC=RnC+1 I RnC>$L(grulst," ") S RnC=0
      Q
        

;* : gran, grulst/gran, tok, toty
GRU(grabA,grunA,RnA) NEW Q I $$arg^pps("grabA,granA") G Qb
    S gran=grabA_"."_grunA
    S grulst=$G(GRc(gran))
    S tok=$P(grulst," ",RnA)
    S toty="R" I tok?1P!(tok[".") S toty="T"
    G Q
;*
PSH  S stkFL="gran,Rn,grulst,gposr_STK(STK)"
     S STK=STK+1
     D SFL^kfm(stkFL)
     Q
;*  : gran, Rn, grulst, gposr
POP  I STK<1 D bug^dv("POP too many, STK empty STK=0","STK") Q
     D GFL^kfm(stkFL)
     S STK=STK-1
     Q

;*  Recursive sr Rule ~ Stack
;*  RN ptr into LST - grulst
;*  : QRU Pass 1/Fail 0    $$RR is Q bug
;* 1st arg TOK becomes RUL
RR(TOK,Rn,LST)  NEW Q I $$arg^pps("RUL,Rn,LST") G Qb
       S LQ=$G(GRc(RUL)) I LQ'=LST S Q="Err LST vs RUL" G Qb
R1     S TOK=$P(LST," ",Rn)
       I TOK=""  S QRU=1 Q
       I TOK["."  DO  Q  ;  terminal
         .I TKk=TOK ;matches term tok
         .I TKc=TOK ;?
         .D ERP S Q="Err" ;Parse Error
       ;Here TOK is new rule
       DO  G Q
         .S Q=$$RR(TOK,1)
         .  I 'QRU G Q
         .S Rn=Rn+1,TOK=$P(LST," ",Rn)
         .S Q=$$RR(TOK,Rn)
       S Q="Fall-to-End" 
       G Qb  ;should not get here
;*
Q      Q:$Q Q Q:Q=""
Qb     D b^dv("Err ^"_$T(+0),"Q,RUL,TOK,Rn,QRU") Q:$Q Q  Q
;*
ERP    Q
