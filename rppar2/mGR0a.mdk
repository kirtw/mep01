==  Grammar 0.1 mumps parts     Simplest, No fail K X  K X,Y


# Punctuations as themselves 
# See CRGtok^ppGRI to create GRt(tokt)   List of Punctuations is in //tokt Line See PUL
//tokt   {,.^%$#@!()[]'":=_   
NN.
LL.
UU.
AA.
PP.

CC.
sp1.
wsp.
eol.
Wd.
Vna.
qs.
int.
#  + - N [.] N   not exponent form yet
num.  
nex.
Qwd.
Swd.
Hwd.
Kwd.

//GR    GRna  &   GRru
LblLine:  Top Level with label and/or start-sp1
   Label sp1. mCmds
# linestart comment
   Comment  
mCmds:Top level, start for now, grab
   Kcmd
   Hcmd   
   Comment

#  Test Errors by Aud^ppGRI
   XXyy.
   ZZWW
   ZZZaaaaaaaaa123

Comment: Semicolon comment
   ; AllCom
AllCom: Text of comment, anything to EOL
   EE. [E.]
   
Label:  Line label/codeblock ref, arg/formal-args
   Na eLab
eLab: op arg
   ( fArg eArgL
eArgL:
   , fArg )
fArg: formal label arg
   LVna

Kcmd:Kill command
    Kwd. sp1. Kcmd2
Kcmd2:  End of Kill Cmd
    Karg
Karg:  Kill argument
    KVnlst
    
KVnlst: List of Vars to Kill
    Vna. [eKVnlst
    
[eKVnlst:  end of comma list of KVars , optionionally null
    , KVnlst

Hcmd:Hang is simple
   Hwd. sp1.  Exp   

Exp:Expression
   Svn
   [unop. Exp
   Svn bop Exp
   Vlit
[unop:  Unary Operators
   +
   -
bop: Binary operator
   +
   -
   < =
   > =
#  Not unary op ?
   ! <
   *
   _
Vlit: Literal value in code, quote or number
   Vlqt
   Vlnum
Vlqt: Literal Quoted string
   " Lstr "

Na:  Name of var, mGbl, label, sans (args)

ALVn: Array or Local Var name, with % or ^ pfx
     Vna.


//m   mumps test code
K X
//TK
Kwd.K sp1. Vna.X_K X
//
